#!/bin/sh

maindir=$1/mini

# Crea maindir se non esiste
if [ ! -d $maindir ] 
then
	mkdir $maindir
	echo Main dir $maindir created...
fi

# Dir
cd $1/decoded

# Params
xstart=$2
xend=$3
ystart=$4
yend=$5

width=$((xend - xstart))
height=$((yend - ystart))
step=256
skip=1

# Crea dir se non esiste
destdir="../mini/mini-$xstart-$xend-$ystart-$yend"

if [ ! -d $destdir ] 
then
	mkdir $destdir
fi

echo Size is: $((xend-xstart))'x'$((yend-ystart))

# Print file
len=$(ls -lR *.DEP | wc -l)

xmin=$((1 + xstart + step))
xmax=$((xmin + step - 1))

ymin=$((1 + ystart + step))
ymax=$((ymin+step - 1))


# --- BTM
cat decoded-last.BTM | sed -n $ymin','$ymax'p' | cut -d" " -f $xmin-$xmax >> $destdir/mini-decoded-last.BTM; 

# --- DEP
for file in *.DEP; do cat $file | sed -n $ymin','$ymax'p' | cut -d" " -f $xmin-$xmax >> $destdir/$file; done

# --- VVX
for file in *.VVX; do cat $file | sed -n $ymin','$ymax'p' | cut -d" " -f $xmin-$xmax >> $destdir/$file; done

# --- VVY
for file in *.VVY; do cat $file | sed -n $ymin','$ymax'p' | cut -d" " -f $xmin-$xmax >> $destdir/$file; done

	
# same as the above one, but with variable step (to downsample the sequence and not pick each frame)
#x=0
#for file in *.DEP; do 
#
#	j=$(printf "%04d" $x)
#
#	cat $file | sed -n $ystart','$yend'p' | cut -d" " -f $xstart-$xend >> $destdir/mini-decoded-$j.DEP; 
#	x=$((x + skip))
#
#	if [[ $x -ge $len ]]; then
#		break
#	fi
#
#done

echo [!] Area $xstart-$xend-$ystart-$yend done!

cd ..
