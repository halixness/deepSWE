==============================
Epochs			100
Batch size		4	datapoints coerenti per batch
Past frames		6
Future frames		1
kernel_size		3
padding 		1
Batch shuffle       	ON
Downsampling		ON
gauss.filter size	3,3
DEP, VVX, BTM
==============================

self.layers = nn.ModuleList([
nn.Conv3d(channels, 8, kernel_size=kernel_size, stride=1, padding=padding),
nn.AvgPool3d((1,2,2)),

ResNetBlock(in_filters = 8, filters = 8, stride = 2, kernel_size=kernel_size, padding=padding),

nn.Conv3d(8, 16, (1,1,1)),
ResNetBlock(in_filters = 16, filters = 16, stride = 2, kernel_size=kernel_size, padding=padding),

nn.Conv3d(16, 32, (1,1,1)),
ResNetBlock(in_filters = 32, filters = 32, stride = (2,1,1), kernel_size=kernel_size, padding=padding),

nn.Conv3d(32, 64, (1,1,1)),
ResNetBlock(in_filters = 64, filters = 64, stride = 1, kernel_size=kernel_size, padding=padding),

# ----------------------

nn.ConvTranspose3d(64, 32, (1,2,2), stride=(1,2,2)),
#nn.BatchNorm3d(num_features=32),

nn.ConvTranspose3d(32, 16, (1,2,2), stride=(1,2,2)),
#nn.BatchNorm3d(num_features=16),

nn.ConvTranspose3d(16, 8, (1,2,2), stride=(1,2,2)),
#nn.BatchNorm3d(num_features=8),

nn.ConvTranspose3d(8, 8, (1,1,1), stride=(1,1,1)),
#nn.BatchNorm3d(num_features=8),

nn.ConvTranspose3d(8, 1, (1,1,1), stride=(1,1,1)),
